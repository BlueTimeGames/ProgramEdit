<Application x:Class="ProgramEdit.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProgramEdit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="DarkBlue" SnapsToDevicePixels="true" CornerRadius="5" BorderBrush="White" BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DodgerBlue"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="DodgerBlue"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Gray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="HorizontalGridLinesBrush" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="DarkBlue"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="DodgerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="DodgerBlue" />
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Padding" Value="5,0,0,0"/>
            <Setter Property="Background" Value="DarkBlue" />
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type ListBox}">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Background" Value="DodgerBlue" />
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="1">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="DarkBlue"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="DodgerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PositionName}" Value="Trenér">
                    <Setter Property="Background" Value="LightSeaGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Won}" Value="1">
                    <Setter Property="Background" Value="LightSeaGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Won}" Value="2">
                    <Setter Property="Background" Value="LightSalmon"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Won}" Value="0">
                    <Setter Property="Background" Value="RoyalBlue"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type DockPanel}">
            <Setter Property="Background" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="RoyalBlue"/>
            <Setter Property="BorderBrush" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="RoyalBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="RoyalBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="RoyalBlue"/>
            <Setter Property="Foreground" Value="RoyalBlue"/>
            <Setter Property="BorderBrush" Value="RoyalBlue"/>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
                                Name="Border"
                                Background="DarkBlue"
                                BorderBrush="White" 
                                BorderThickness="1" 
                                CornerRadius="5,5,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="DodgerBlue" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Gray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      CornerRadius="5"
      Background="DodgerBlue"
                    
      BorderBrush="White"
      BorderThickness="1" />
                <Border 
      Grid.Column="0"
      CornerRadius="5,0,0,5" 
      Margin="1" 
      Background="DarkBlue"  />
                <Path 
      x:Name="Arrow"
      Grid.Column="1"     
      Fill="DarkBlue"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="DarkBlue" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="DarkBlue" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="Gray" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                    <Setter Property="Foreground" Value="White"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                                <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True">
                                    <Border 
                x:Name="DropDownBorder"
                Background="DodgerBlue"
                BorderThickness="1"
                BorderBrush="White"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
               Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
